// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalTaskInvoice.Models;

namespace TechnicalTaskInvoice.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200620144537_createmigration")]
    partial class createmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TechnicalTaskInvoice.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("InvoiceHeaderID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<double>("Net")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int>("UnitID")
                        .HasColumnType("int");

                    b.Property<int>("quntity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceHeaderID");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("TechnicalTaskInvoice.Models.InvoiceHeader", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Invoice_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Net")
                        .HasColumnType("float");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.Property<double>("Taxes")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("InvoiceHeader");
                });

            modelBuilder.Entity("TechnicalTaskInvoice.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "T_shirt"
                        },
                        new
                        {
                            ID = 2,
                            Name = "sweater"
                        },
                        new
                        {
                            ID = 3,
                            Name = "jacket"
                        },
                        new
                        {
                            ID = 4,
                            Name = "coat"
                        },
                        new
                        {
                            ID = 5,
                            Name = "jeans"
                        },
                        new
                        {
                            ID = 6,
                            Name = "tracksuit"
                        },
                        new
                        {
                            ID = 7,
                            Name = "shorts"
                        },
                        new
                        {
                            ID = 8,
                            Name = "vest"
                        },
                        new
                        {
                            ID = 9,
                            Name = "pyjamas"
                        },
                        new
                        {
                            ID = 10,
                            Name = "shoes"
                        },
                        new
                        {
                            ID = 11,
                            Name = "dress"
                        },
                        new
                        {
                            ID = 12,
                            Name = "heels"
                        },
                        new
                        {
                            ID = 13,
                            Name = "skirt"
                        },
                        new
                        {
                            ID = 14,
                            Name = "panties"
                        },
                        new
                        {
                            ID = 15,
                            Name = "blouse"
                        });
                });

            modelBuilder.Entity("TechnicalTaskInvoice.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "MainStore"
                        },
                        new
                        {
                            ID = 2,
                            Name = "SubStore"
                        },
                        new
                        {
                            ID = 3,
                            Name = "NewStore"
                        });
                });

            modelBuilder.Entity("TechnicalTaskInvoice.Models.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Unit");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Pound"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Dollar"
                        });
                });

            modelBuilder.Entity("TechnicalTaskInvoice.Models.InvoiceDetail", b =>
                {
                    b.HasOne("TechnicalTaskInvoice.Models.InvoiceHeader", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceHeaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
